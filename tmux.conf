# https://github.com/aqua8regia/tmux-Productive-Mouse-Free-Development_zh/blob/master/book-content/Chapter2.md
# http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man1/tmux.1?query=tmux&sec=1
# http://dotshare.it/dots/830/
#
# prefix key
unbind-key C-b
set -g prefix C-a

# shell下的Ctrl+a切换到行首在此配置下失效，此处设置之后Ctrl+a再按a即可切换至shell行首
bind-key a send-prefix

# 绑定synchronize-panes
bind-key y set-window-option synchronize-panes

# start window indexing at one instead of zero 使窗口从1开始，默认从0开始 
set -g base-index 1

# panel也从1开始
setw -g pane-base-index 1

# key bindings for horizontal and vertical panes
unbind %
bind \ split-window -h      # 使用|竖屏，方便分屏
unbind '"'
bind - split-window -v      # 使用-横屏，方便分屏 

# 小写hjkl跳转，大写HJKL调整panel大小，一次5个单位，-r参数即repeatable，在时间内可以重复调整，默认500毫秒
bind -r C-a-h select-pane -L
bind -r C-a-j select-pane -U
bind -r C-a-k select-pane -D
bind -r C-a-l select-pane -R
bind -r H resize-pane -L 5
bind -r J resize-pane -U 5
bind -r K resize-pane -D 5
bind -r L resize-pane -R 5

# 无需prefix键进行Panel间的跳转，但这个会跟其他键冲突，ctrl + l原本是清屏的快捷键
# 不过参考这个，把上面的跳转改了下，不必松开prefix就可以跳转
# https://github.com/christoomey/vim-tmux-navigator
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
#bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
#bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
#bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
#bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
#bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# 交换pane
# { / }左右pane交换
# 空格 横竖切换

# 鼠标切换窗口/调整分屏大小
#setw -g mouse-resize-pane on
#setw -g mouse-select-pane on
#setw -g mouse-select-window on
#setw -g mode-mouse on

# copy模式
# copy模式下，进入复制模式后，按下Space键的同时使用 j/k/h/l 移动光标来选择复制内容，然后使用 prefix + ] 键进行粘贴所选内容
# 使用copy模式以避免 复制一行会贯穿两个panel 的问题
# 这里可以改变tmux的复制粘贴的快捷键
setw -g mode-keys vi
# unbind [
# bind Escape copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'v' begin-selection
# bind -t vi-copy 'y' copy-selection

# 让tmux访问系统剪贴板功能
# tmux和操作系统各有自己的一套复制粘贴功能，正常情况下，tmux的复制只能把内容暂存到tmux自己的guffer中，reattach-to-user-namespace插件解决了两者互通的问题
#
# http://foocoder.com/blog/zhong-duan-huan-jing-zhi-tmux.html/
# https://robots.thoughtbot.com/how-to-copy-and-paste-with-tmux-on-mac-os-x
#
# tmux中复制完成后，按下prefix + y键，把tmux buffer中的内容复制到clipboard，然后可以正常的使用command + v 进行粘贴
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind p run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to clipboard"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# 状态条设置
set -g status-justify "centre"
set -g default-terminal "screen-256color"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour144,bg=colour237"
set -g status-right-style "none"
set -g pane-active-border-style "fg=colour27"
set -g pane-active-border-style "fg=red"
set -g status-utf8 "on"
set -g status-style "bg=colour234,none"
set -g message-style "fg=colour144,bg=colour237"
set -g pane-border-style "fg=colour237"
set -g status-right-length "100"
set -g status-left-length "100"

setw -g window-status-activity-attr "none"
setw -g window-status-activity-style "fg=colour27,bg=colour234,none"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour39,bg=colour234,none"
set -g status-left "#[fg=colour144,bg=colour237,nobold,nounderscore,noitalics]#h #[fg=colour144,bg=colour237,nobold,nounderscore,noitalics] #[fg=colour144,bg=colour237]s#S: #[fg=colour144,bg=colour237]w#I: #[fg=colour144,bg=colour237]p#P #[fg=colour144,bg=colour237,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour237,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour144,bg=colour237] %Y.%m.%d  %H:%M #[fg=colour144,bg=colour237,nobold,nounderscore,noitalics]#[fg=colour144,bg=colour237] #(ifconfig en0 | grep 'inet ' | awk '{print $2}') "
setw -g window-status-format "#[fg=colour34,bg=colour234] #I #[fg=colour34,bg=colour234] #W "
setw -g window-status-current-format "#[fg=red,bg=colour234]#I >#[fg=colour34,bg=colour234]#{pane_current_path} "

# 非当前窗口有事件发生，状态栏高亮提示
setw -g monitor-activity on
set -g visual-activity on

# reload config
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

