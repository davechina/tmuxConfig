# prefix key
unbind-key C-b
set -g prefix C-a

# shell下的Ctrl+a切换到行首在此配置下失效，此处设置之后Ctrl+a再按a即可切换至shell行首
bind-key a send-prefix

# 绑定synchronize-panes
bind-key y set-window-option synchronize-panes

# start window indexing at one instead of zero 使窗口从1开始，默认从0开始 
set -g base-index 1

# panel也从1开始
setw -g pane-base-index 1

# key bindings for horizontal and vertical panes
unbind %
bind \ split-window -h      # 使用|竖屏，方便分屏
unbind '"'
bind - split-window -v      # 使用-横屏，方便分屏 

# 小写hjkl跳转，大写HJKL调整panel大小，一次5个单位，-r参数即repeatable，在时间内可以重复调整，默认500毫秒
#bind -r C-a-h select-pane -L
#bind -r C-a-j select-pane -D
#bind -r C-a-k select-pane -U
#bind -r C-a-l select-pane -R
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 无需prefix键进行Panel间的跳转，但这个会跟其他键冲突，ctrl + l原本是清屏的快捷键
# 不过参考这个，把上面的跳转改了下，不必松开prefix就可以跳转
# vim中要进行响应的设置，否则如果panel中开启了vim，无法使用快捷键进行panel间的跳转。
# https://github.com/christoomey/vim-tmux-navigator
# http://www.codeography.com/2013/06/19/navigating-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# 交换pane
# { / }左右pane交换
# 空格 横竖切换

# 鼠标切换窗口/调整分屏大小
#setw -g mouse-resize-pane on
#setw -g mouse-select-pane on
#setw -g mouse-select-window on
#setw -g mode-mouse on

# copy模式
# copy模式下, 按下Space键的同时使用 j/k/h/l 移动光标来选择复制内容，敲Enter健进行复制，然后使用 prefix + ] 键进行粘贴
# 使用copy模式以避免 复制一行会贯穿两个panel 的问题
setw -g mode-keys vi

# 让tmux访问系统剪贴板功能
# tmux和操作系统各有自己的一套复制粘贴功能，正常情况下，tmux的复制只能把内容暂存到tmux自己的buffer中，reattach-to-user-namespace插件解决了两者互通的问题
# tmux中复制完成后，按下prefix + y键，把tmux buffer中的内容复制到clipboard，然后可以正常的使用command + v 进行粘贴
#
# 注意：该插件不能在新的os 10.11中工作 
#
#set-option -g default-command "reattach-to-user-namespace -l zsh"
#bind p run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to clipboard"
#bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# 状态条设置
#-- statusbar --#
set -g status-justify centre
set -g status-left "#[fg=red]s#S:w#I.p#P#[default]"
set -g status-right "#[fg=red]#(ifconfig en0|grep 'inet '|awk '{print $2}') "
set -g status-left-attr bright
set -g status-right-attr bright
set -g status-left-length 120
set -g status-right-length 120
set -g status-interval 1
set -g visual-activity on
setw -g monitor-activity on
setw -g automatic-rename off

# default statusbar colors
set -g status-bg colour235 #base02
set -g status-fg colour136 #yellow
set -g status-attr default

# default window title colors
setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg cyan
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# window title string (uses statusbar variables)
set -g set-titles-string '#T'
set -g status-justify "centre"
set -g window-status-format '#I #W'
set -g window-status-current-format ' #I #W '

# pane border
set -g pane-active-border-fg '#228fbd'
set -g pane-border-fg '#555555'

# message text
set -g message-bg colour235 #base02
set -g message-fg colour166 #orange

# clock
setw -g clock-mode-colour colour64 #green
